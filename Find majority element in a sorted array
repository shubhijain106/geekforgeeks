import java.io.*;
import java.util.*;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Map.Entry;
import java.util.stream.Collectors;

// you can also use imports, for example:
// import java.util.*;

// you can write to stdout for debugging purposes, e.g.
// System.out.println("this is a debug message");

class Solution {
  
    static void majorityinsorted(int[] arr,int key)
  {
      int n=arr.length;
      int l=0;
      int r=0;
    if(arr[n/2]==key)
    {
        l=binarysearch(arr,0,n/2-1,key);
        r=binarysearch(arr,n/2+1,n-1,key);
        System.out.println("l"+l);
        System.out.println("r"+r);
        if(r-l+1>n/2)
        System.out.println("true");
    else
         System.out.println("false");
    }
   
    else
        System.out.println("false");
    return;
    
        
  }
  static int binarysearch(int[] arr,int l,int n,int key)
  {
    if(l<=n)
    {
        int mid=(l+n)/2;
    System.out.println(arr[mid]+" "+mid);
        if(( mid==0|| arr[mid-1]<key) && arr[mid]==key )
        return mid;
         else if((mid==n|| arr[mid+1]>key) && arr[mid]==key  )
         return mid;
         else if(arr[mid]<=key )
          return binarysearch(arr,mid+1,n,key);
         else if( arr[mid]>key )
        return binarysearch(arr,0,mid-1,key);
        
    }
    return -1;    
  }
     
    
  
  public static void main(String[] args)
  {
  
      int[] arr =  {1,2,3,3,3,3,10,10};
      int[] arr2 = {5, 7, 9, 25,50};
       System.out.println(Arrays.toString(arr));
      majorityinsorted(arr,3);

  }
}